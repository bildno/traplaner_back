server:
  port: 8181

spring:
  application:
    name: gateway-service
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          "[/**]": # 모든 경로에 대한 CORS 설정
            allowed-origins:
              - "http://localhost:3000"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
            allow-credentials: true
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Traplan Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
        - name: DedupeResponseHeader
          args:
            name: Access-Control-Allow-Credentials Access-Control-Allow-Origin
            strategy: RETAIN_FIRST
      routes:
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/**
          filters:
            # 요청이 서비스로 전달되기 전 헤더에서 제거하고자 하는 값이 있을 때 사용하는 필터
            - RemoveRequestHeader=Cookie
            # 요청 경로를 특정 패턴에 따라 새로운 경로로 변환 -> 정규표현식 사용 가능 (자유도 높음)
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}

           # - StripPrefix=1
            - AuthorizationHeaderFilter


        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie

            # 요청 경로를 특정 패턴에 따라 새로운 경로로 변환 -> 정규표현식 사용 가능 (자유도 높음)
            - RewritePath=/member-service/(?<segment>.*), /$\{segment}
            # - StripPrefix=1
            - AuthorizationHeaderFilter


        - id: travelplan-service
          uri: lb://TRAVELPLAN-SERVICE
          predicates:
            - Path=/travelplan-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/travelplan-service/(?<segment>.*), /$\{segment}

            # - StripPrefix=1
            - AuthorizationHeaderFilter

        - id: travelplan-service
          uri: lb://TRAVELPLAN-SERVICE
          predicates:
            - Path=/travelplan-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: main-service
          uri: lb://MAIN-SERVICE
          predicates:
            - Path=/main-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/main-service/(?<segment>.*), /$\{segment}

            # - StripPrefix=1
            - AuthorizationHeaderFilter


        - id: main-service
          uri: lb://MAIN-SERVICE
          predicates:
            - Path=/main-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: mypage-service
          uri: lb://MYPAGE-SERVICE
          predicates:
            - Path=/mypage-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/mypage-service/(?<segment>.*), /$\{segment}

#             - StripPrefix=1
            - AuthorizationHeaderFilter

        - id: mypage-service
          uri: lb://MYPAGE-SERVICE
          predicates:
            - Path=/mypage-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: travelboard-service
          uri: lb://TRAVELBOARD-SERVICE
          predicates:
            - Path=/travelboard-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/travelboard-service/(?<segment>.*), /$\{segment}

            # - StripPrefix=1
            - AuthorizationHeaderFilter

        - id: travelboard-service
          uri: lb://TRAVELBOARD-SERVICE
          predicates:
            - Path=/travelboard-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

jwt:
  expiration: 60
  secretKey: ICzihf230K36+z90UWHfOEJZCf/CYB2CJaeKvX06/2QxI//izqT7pIs5Yr5KrIetZcQmt2JF6AlxU5zAcc38KQ==

# 액츄에이터 등록 (beans: 컨테이너에 등록된 빈 보여줌, health: 서버 살아 있는지 알려줌)
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, busrefresh, beans, httpexchanges












